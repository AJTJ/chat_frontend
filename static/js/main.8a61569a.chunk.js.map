{"version":3,"sources":["SocketApp/index.jsx","SocketApp/SignUpLogin/index.jsx","assets/bingus.png","SocketApp/AppWs/index.jsx","reportWebVitals.js","index.js","SocketApp/theme.js"],"names":["AppContainer","styled","div","App","useState","undefined","receivedData","setReceivedData","wsMessage","setWsMessage","allMessages","setAllMessages","signedInUser","setSignedInUser","allUsers","setAllUsers","reconnectingMsg","setReconnectingMsg","defaultConnectingMsg","pleaseLoginMsg","isDev","process","NODE_ENV","SERVER_ADDRESS","WS_SERVER_ADDRESS","AMENDED_SERVER_ADDRESS","ws","useRef","openSocket","props","current","WebSocket","onopen","console","log","onmessage","e","data","onclose","useEffect","currentWS","close","receivedDataJSON","JSON","parse","all_messages","message_to_client","is_update","user_name","all_online_users","cleanUpReceived","isLogout","ExportedApp","theme","TitleBar","p","colors","color2","Title","span","color1","LoginZone","RegisterButton","button","color5","AuthZone","color4","mq","ServerMsg","AuthThings","SignedInUser","WelcomeName","Form","form","AuthTitle","SignUpLogin","userName","setUserName","password","setPassword","isLoginForm","setIsLoginForm","closeSocket","resetWs","resetNamePassword","className","onClick","preventDefault","fetch","method","headers","credentials","then","res","onSubmit","requestOptions","body","stringify","jsonData","json","catch","error","id","type","placeholder","autoComplete","onChange","target","value","MessageContainer","color3","indexNum","color2Lighter","NameTime","MessageName","isYou","NameImg","img","MessageTime","MessageContent","MsgForm","MsgInput","input","AllChat","ChatSpaceContainer","AllMessagesContainer","AllUsersContainer","AllOnlineUsersContainer","UserName","AppWs","messageValue","setMessageValue","length","map","message","i","nextIsSame","name","time","moment","utc","local","format","src","bingus","alt","usr","jsonObject","send","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","SocketApp","document","getElementById","bps","bp","facepaint","Global","styles","css","color_1"],"mappings":"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","file":"static/js/main.8a61569a.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { AppWs } from \"./AppWs\";\nimport { SignUpLogin } from \"./SignUpLogin\";\n// import testData from \"./test.json\";\nimport { Global, theme } from \"./theme\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  width: 100%;\n`;\n\nconst App = () => {\n  // DATA from server\n  // const [receivedData, setReceivedData] = useState(JSON.stringify(testData));\n  const [receivedData, setReceivedData] = useState(undefined);\n  const [wsMessage, setWsMessage] = useState(undefined);\n  const [allMessages, setAllMessages] = useState([]);\n  const [signedInUser, setSignedInUser] = useState(undefined);\n  const [allUsers, setAllUsers] = useState([]);\n  const [reconnectingMsg, setReconnectingMsg] = useState(undefined);\n\n  const defaultConnectingMsg = \"Attempting to Connect\";\n  const pleaseLoginMsg = \"Please login or register\";\n\n  //68.183.138.33:8081;\n\n  // LOCAL SETUP\n  // const SERVER_ADDRESS = \"//127.0.0.1:8081\";\n  // const WS_SERVER_ADDRESS = `ws:${SERVER_ADDRESS}/ws/`;\n  // const AMENDED_SERVER_ADDRESS = `http:${SERVER_ADDRESS}`;\n\n  // console.log(process.env);\n  // PROD SETUP\n  const isDev = process?.env?.NODE_ENV === \"development\";\n  const SERVER_ADDRESS = isDev\n    ? \"//127.0.0.1:8081\"\n    : \"//chat.freedivingsource.com\";\n  const WS_SERVER_ADDRESS = `ws${!isDev ? \"s\" : \"\"}:${SERVER_ADDRESS}/ws/`;\n  const AMENDED_SERVER_ADDRESS = `http${!isDev ? \"s\" : \"\"}:${SERVER_ADDRESS}`;\n\n  // FRONT END SOCKET\n  const ws = useRef(null);\n\n  const cleanUpReceived = (props) => {\n    const { isLogout } = props || {};\n    setReceivedData(undefined);\n    setAllMessages([]);\n    setSignedInUser(undefined);\n    setAllUsers([]);\n    setWsMessage(isLogout ? pleaseLoginMsg : undefined);\n  };\n\n  const openSocket = (props) => {\n    setReconnectingMsg(defaultConnectingMsg);\n\n    // origin: \"https://chat.freedivingsource.com\"\n    // setTimeout(() => {\n    ws.current = new WebSocket(WS_SERVER_ADDRESS);\n\n    if (ws.current) {\n      ws.current.onopen = () => {\n        console.log(\"ws opened\");\n        // reset messages\n        setWsMessage(undefined);\n        setReconnectingMsg(undefined);\n        if (ws?.current) {\n          ws.current.onmessage = (e) => {\n            setReceivedData(e.data);\n          };\n        }\n      };\n      ws.current.onclose = () => {\n        console.log(\"ws closed\");\n        if (!wsMessage) setWsMessage(pleaseLoginMsg);\n      };\n    }\n    setReconnectingMsg(undefined);\n    // }, 2000);\n  };\n\n  // open the socket on page load\n  useEffect(() => {\n    openSocket();\n\n    const currentWS = ws?.current;\n\n    return () => {\n      // close the socket\n      currentWS?.close();\n    };\n  }, []);\n\n  useEffect(() => {\n    const receivedDataJSON = receivedData ? JSON.parse(receivedData) : {};\n\n    if (receivedDataJSON?.all_messages) {\n      setAllMessages(JSON.parse(receivedDataJSON.all_messages));\n    } else {\n      setAllMessages([]);\n    }\n\n    if (receivedDataJSON?.message_to_client) {\n      setWsMessage(receivedDataJSON.message_to_client);\n    } else if (!receivedDataJSON?.is_update) {\n      setWsMessage(wsMessage);\n    }\n\n    if (receivedDataJSON?.user_name) {\n      setSignedInUser(receivedDataJSON.user_name);\n    } else {\n      setSignedInUser(undefined);\n    }\n\n    if (receivedDataJSON?.all_online_users) {\n      setAllUsers(receivedDataJSON.all_online_users);\n    } else {\n      setAllUsers([]);\n    }\n  }, [receivedData]);\n\n  return (\n    <AppContainer>\n      <SignUpLogin\n        {...{\n          ws,\n          openSocket,\n          setReconnectingMsg,\n          cleanUpReceived,\n          defaultConnectingMsg,\n          reconnectingMsg,\n          wsMessage,\n          setWsMessage,\n          signedInUser,\n          AMENDED_SERVER_ADDRESS,\n        }}\n      />\n      <AppWs\n        {...{\n          ws,\n          reconnectingMsg,\n          allMessages,\n          allUsers,\n          signedInUser,\n        }}\n      />\n    </AppContainer>\n  );\n};\n\nconst ExportedApp = () => (\n  <ThemeProvider theme={theme}>\n    <Global />\n    <App />\n  </ThemeProvider>\n);\n\nexport default ExportedApp;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { mq } from \"../theme\";\n\nlet TitleBar = styled.div`\n  background: ${(p) => p.theme.colors.color2};\n  text-align: center;\n  position: relative;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.span`\n  color: ${(p) => p.theme.colors.color1};\n  font-size: 40px;\n  font-weight: bolder;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 1;\n`;\n\nlet LoginZone = styled.div`\n  width: 100%;\n  height: 90px;\n`;\n\nlet RegisterButton = styled.button`\n  position: absolute;\n  right: 5px;\n  border-radius: 10px;\n  margin: 0 2px 0 15px;\n  border: none;\n  background: ${(p) => p.theme.colors.color5};\n  color: ${(p) => p.theme.colors.color2};\n  padding: 6px 5px;\n  width: 60px;\n  font-size: 10px;\n`;\n\nlet AuthZone = styled.div`\n  height: 50px;\n  background: ${(p) => p.theme.colors.color2};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 10px;\n  font-size: 14px;\n\n  input[type=\"submit\"],\n  button {\n    border-radius: 10px;\n    margin: 0 2px;\n    border: none;\n    background: ${(p) => p.theme.colors.color1};\n    color: ${(p) => p.theme.colors.color2};\n    padding: 4px 2px;\n    width: 45px;\n    font-size: 10px;\n  }\n  .alt {\n    background: ${(p) => p.theme.colors.color4};\n    color: ${(p) => p.theme.colors.color2};\n  }\n  ${mq[2]} {\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5px 0;\n  }\n`;\n\nlet ServerMsg = styled.div`\n  height: 15px;\n  display: flex;\n  align-items: center;\n`;\n\nlet AuthThings = styled.div`\n  display: flex;\n  align-items: center;\n  height: 20px;\n`;\n\nlet SignedInUser = styled.div`\n  padding-right: 10px;\n  display: flex;\n`;\n\nlet WelcomeName = styled.div`\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 120px;\n  padding: 0 0 0 5px;\n`;\n\nlet Form = styled.form`\n  display: flex;\n  align-items: center;\n  input[type=\"text\"],\n  input[type=\"password\"] {\n    height: 28px;\n    margin-right: 5px;\n    border-radius: 5px;\n    border: 1px solid black;\n    padding: 5px;\n    /* margin-top: 2px; */\n    font-size: 12px;\n    ${mq[2]} {\n      font-size: 10px;\n      width: 100px;\n      height: 20px;\n    }\n  }\n`;\n\nlet AuthTitle = styled.div`\n  padding-right: 5px;\n  ${mq[2]} {\n    width: 50px;\n    font-size: 10px;\n    text-align: right;\n  }\n`;\n\nexport const SignUpLogin = ({\n  ws,\n  openSocket,\n  setReconnectingMsg,\n  cleanUpReceived,\n  defaultConnectingMsg,\n  signedInUser,\n  reconnectingMsg,\n  wsMessage,\n  setWsMessage,\n  AMENDED_SERVER_ADDRESS,\n}) => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoginForm, setIsLoginForm] = useState(true);\n\n  // HIDE/SHOW authform\n\n  const closeSocket = (props) => {\n    ws?.current?.close();\n    cleanUpReceived(props);\n  };\n\n  const resetWs = () => {\n    resetNamePassword();\n    closeSocket();\n    openSocket();\n  };\n\n  const handleSignUp = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      credentials: \"include\",\n      body: JSON.stringify({ user_name: userName, password: password }),\n    };\n    fetch(`${AMENDED_SERVER_ADDRESS}/signup/`, requestOptions).then((res) => {\n      res.json().then((body) => setWsMessage(body));\n      resetWs();\n    });\n  };\n\n  const handleSignIn = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      credentials: \"include\",\n      body: JSON.stringify({ user_name: userName, password: password }),\n    };\n    fetch(`${AMENDED_SERVER_ADDRESS}/login/`, requestOptions)\n      .then((res) => {\n        console.log(res);\n        const jsonData = res.json();\n        console.log({ jsonData });\n        jsonData.then((body) => setWsMessage(body));\n        resetWs();\n      })\n      .catch((e) => {\n        console.error(\"sign in error\", e);\n      });\n  };\n\n  const handleLogOut = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n      credentials: \"include\",\n      // body: JSON.stringify({ user_name: userName, password: password }),\n    };\n    fetch(`${AMENDED_SERVER_ADDRESS}/logout/`, requestOptions).then((res) => {\n      closeSocket({ isLogout: true });\n    });\n  };\n\n  const handleUserChange = (e) => {\n    setUserName(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const resetNamePassword = () => {\n    setUserName(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <LoginZone>\n      <TitleBar>\n        <Title>Rusty Chat</Title>\n        {!signedInUser && (\n          <RegisterButton\n            className=\"alt\"\n            onClick={() => {\n              resetNamePassword();\n              setIsLoginForm(!isLoginForm);\n            }}\n          >\n            {isLoginForm ? \"Register?\" : \"Login?\"}\n          </RegisterButton>\n        )}\n      </TitleBar>\n      <AuthZone>\n        <ServerMsg>{wsMessage && <div>{wsMessage}</div>}</ServerMsg>\n        <AuthThings>\n          {!signedInUser ? (\n            <>\n              <AuthTitle>\n                {isLoginForm ? \"Login here\" : \"Register here\"}\n              </AuthTitle>\n              <Form onSubmit={isLoginForm ? handleSignIn : handleSignUp}>\n                <input\n                  id=\"userInput\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  autoComplete=\"username\"\n                  onChange={handleUserChange}\n                  value={userName}\n                />\n                <input\n                  id=\"passwordInput\"\n                  placeholder=\"password\"\n                  type=\"password\"\n                  autoComplete={\n                    isLoginForm ? \"current-password\" : \"new-password\"\n                  }\n                  onChange={handlePasswordChange}\n                  value={password}\n                />\n                <input type=\"submit\" value=\"Submit\" />\n              </Form>\n            </>\n          ) : (\n            <>\n              {signedInUser && (\n                <SignedInUser>\n                  Welcome, <WelcomeName>{signedInUser}</WelcomeName>\n                </SignedInUser>\n              )}\n              <button onClick={handleLogOut}>Log out</button>\n            </>\n          )}\n        </AuthThings>\n      </AuthZone>\n    </LoginZone>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/bingus.279d8555.png\";","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport moment from \"moment\";\nimport { mq } from \"../theme\";\nimport bingus from \"../../assets/bingus.png\";\n\nconst MessageContainer = styled.div`\n  padding: 0 5px;\n  color: ${(p) => p.theme.colors.color3};\n  /* background: ${(p) =>\n    p.indexNum % 2 === 0 ? p.theme.colors.color2Lighter : \"none\"}; */\n`;\n\nconst NameTime = styled.div`\n  padding: 15px 15px 5px 0;\n  display: flex;\n`;\n\nconst MessageName = styled.span`\n  display: inline-block;\n  color: ${(p) => p.theme.colors.color2};\n  color: ${(p) => p.isYou && p.theme.colors.color1};\n  font-weight: ${(p) => (p.isYou ? \"bolder\" : \"bold\")};\n  font-size: 12px;\n  display: inline-block;\n  max-width: 100px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst NameImg = styled.img`\n  height: 15px;\n  width: 15px;\n`;\n\nconst MessageTime = styled.span`\n  color: ${(p) => p.theme.colors.color2Lighter};\n  font-size: 12px;\n  padding-left: 10px;\n`;\n\nconst MessageContent = styled.div`\n  padding: 2px 0;\n  font-size: 12px;\n  line-height: 15px;\n`;\n\nconst MsgForm = styled.form`\n  /* position: fixed; */\n  /* bottom: 0; */\n  /* flex-grow: 1; */\n  width: 100%;\n  height: 60px;\n  margin: 0;\n  padding: 10px 0 10px;\n  background: ${(p) => p.theme.colors.color2};\n`;\n\nconst MsgInput = styled.input`\n  width: calc(100% - 6px);\n  border-radius: 3px;\n  padding: 10px 3px;\n  resize: none;\n  margin: 0 3px;\n  background: ${(p) => p.theme.colors.color5};\n  color: ${(p) => p.theme.colors.color3};\n`;\n\nconst AllChat = styled.div`\n  width: 100%;\n  display: flex;\n  height: calc(100% - 90px);\n  /* flex-grow: 1; */\n  flex-direction: column;\n  background: ${(p) => p.theme.colors.color2};\n`;\n\nconst ChatSpaceContainer = styled.div`\n  display: flex;\n  border: 1px solid ${(p) => p.theme.colors.color1};\n  border-radius: 3px;\n  /* padding: 0 5px 0; */\n  margin: 0 5px;\n  flex-grow: 2;\n  /* max-height: calc(100% - 100px); */\n  overflow: hidden;\n  /* height: 100%; */\n  /* height: calc(100vh - 60px - 90px); */\n`;\n\nconst AllMessagesContainer = styled.div`\n  width: calc(100% - 120px);\n  /* overflow: scroll; */\n  overflow: hidden;\n  overflow-y: scroll;\n  display: flex;\n  flex-direction: column-reverse;\n  flex-grow: 1;\n  background: ${(p) => p.theme.colors.color5};\n  scrollbar-color: ${(p) =>\n    `${p.theme.colors.color5} ${p.theme.colors.color4}`};\n  ::-webkit-scrollbar {\n    background: ${(p) => p.theme.colors.color4};\n  }\n  ::-webkit-scrollbar-thumb {\n    background: ${(p) => p.theme.colors.color5};\n    border-radius: 10px;\n    border: ${(p) => p.theme.colors.color4} 1px solid;\n  }\n`;\n\nconst AllUsersContainer = styled.div`\n  width: 120px;\n  padding-left: 10px;\n  overflow-y: hidden;\n  border-left: ${(p) => p.theme.colors.color4} 1px solid;\n  ${mq[2]} {\n    width: 75px;\n    font-size: 10px;\n  }\n  background: ${(p) => p.theme.colors.color5};\n  color: ${(p) => p.theme.colors.color3};\n`;\n\nconst AllOnlineUsersContainer = styled.div`\n  padding-top: 5px;\n  padding-bottom: 50px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  height: 100%;\n  scrollbar-color: ${(p) =>\n    `${p.theme.colors.color5} ${p.theme.colors.color4}`};\n  ::-webkit-scrollbar {\n    background: ${(p) => p.theme.colors.color4};\n  }\n  ::-webkit-scrollbar-thumb {\n    background: ${(p) => p.theme.colors.color5};\n    border-radius: 10px;\n    border: ${(p) => p.theme.colors.color4} 1px solid;\n  }\n`;\n\n// const CurUsersTitle = styled.div`\n//   color: ${(p) => p.theme.colors.color1};\n//   font-weight: bold;\n//   padding-bottom: 5px;\n//   /* position: fixed; */\n// `;\n\nconst UserName = styled.div`\n  font-size: 12px;\n  white-space: nowrap;\n  font-weight: ${(p) => (p.isYou ? \"bold\" : \"normal\")};\n  /* text-decoration: ${(p) => p.isYou && \"underline\"}; */\n  ${mq[2]} {\n    /* width: 75px; */\n    font-size: 10px;\n  }\n  overflow: hidden;\n  max-width: 100%;\n  text-overflow: ellipsis;\n`;\n\nexport const AppWs = (props) => {\n  const { ws, reconnectingMsg, allMessages, allUsers, signedInUser } = props;\n  const [messageValue, setMessageValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const jsonObject = JSON.stringify({\n      message: messageValue,\n    });\n    ws?.current?.send && ws?.current?.send(jsonObject);\n\n    setMessageValue(\"\");\n  };\n\n  const handleChange = (e) => {\n    setMessageValue(e.target.value);\n  };\n\n  return (\n    <AllChat>\n      <ChatSpaceContainer>\n        <AllMessagesContainer>\n          {!!allMessages?.length\n            ? allMessages?.map((message, i) => {\n                let nextIsSame = allMessages[i + 1]?.name === message.name;\n                let time = moment\n                  .utc(message?.time)\n                  .local()\n                  .format(\"h:mm:ss a, D MMM YY\");\n                return (\n                  <MessageContainer\n                    key={message?.message + i + message?.time}\n                    indexNum={i}\n                  >\n                    <div key={message?.time + message?.message}>\n                      {!nextIsSame && (\n                        <NameTime>\n                          <MessageName isYou={message?.name === signedInUser}>\n                            {message?.name}{\" \"}\n                            {message?.name === \"bingus\" && (\n                              <NameImg src={bingus} alt=\"\" />\n                            )}\n                          </MessageName>\n                          <MessageTime>{time}</MessageTime>\n                        </NameTime>\n                      )}\n                      <MessageContent>{message?.message}</MessageContent>\n                    </div>\n                  </MessageContainer>\n                );\n              })\n            : reconnectingMsg && (\n                <MessageContainer>\n                  <MessageName>From the server</MessageName>\n                  <MessageContent>{reconnectingMsg}</MessageContent>\n                </MessageContainer>\n              )}\n        </AllMessagesContainer>\n        <AllUsersContainer>\n          <AllOnlineUsersContainer>\n            {/* <CurUsersTitle>Current users</CurUsersTitle> */}\n            {signedInUser && !allUsers?.length ? (\n              <UserName>...Nobody here</UserName>\n            ) : !signedInUser && !allUsers?.length ? (\n              <UserName>Please Login</UserName>\n            ) : (\n              <>\n                {allUsers.map((usr, i) => {\n                  return (\n                    <UserName key={i + usr} isYou={usr === signedInUser}>\n                      {/* {usr === signedInUser ? `${usr} (you)` : usr} */}\n                      {usr === signedInUser ? `⭐️ ${usr}` : usr}\n                    </UserName>\n                  );\n                })}\n              </>\n            )}\n          </AllOnlineUsersContainer>\n        </AllUsersContainer>\n      </ChatSpaceContainer>\n      <MsgForm onSubmit={handleSubmit}>\n        <MsgInput\n          onChange={handleChange}\n          placeholder={\"write a message\"}\n          value={messageValue}\n        />\n      </MsgForm>\n    </AllChat>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SocketApp from \"./SocketApp\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SocketApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Global as EmoGlobal, css } from \"@emotion/react\";\n\nimport facepaint from \"facepaint\";\nconst bps = [\"400\", \"600\", \"800\", \"1060\"];\n\nexport const mq = bps.map((bp) => `@media (max-width: ${bp}px)`);\nexport const mqMin = bps.map((bp) => `@media (min-width: ${bp}px)`);\n\nexport const mqO = facepaint([\n  `@media(max-width: ${bps[3]}px)`,\n  `@media(max-width: ${bps[2]}px)`,\n  `@media(max-width: ${bps[1]}px)`,\n  `@media(max-width: ${bps[0]}px)`,\n]);\n\nexport const theme = {\n  colors: {\n    color1: \"#b7410e\",\n    color2: \"#f4f7be\",\n    color2Lighter: \"rgba(244, 247, 191, 0.61)\",\n    color3: \"#e5f77d\",\n    color4: \"#deba6f\",\n    color5: \"#1e000e\",\n  },\n};\n\nexport const Global = () => (\n  <EmoGlobal\n    styles={(p) => css`\n      * {\n        box-sizing: border-box;\n      }\n      html {\n        height: 100%;\n      }\n      body {\n        font-family: \"Lato\", sans-serif;\n        margin: 0;\n        padding: 0;\n        a {\n          text-decoration: none;\n          color: ${(p) => p.theme.colors.color_1};\n        }\n      }\n    `}\n  />\n);\n"],"sourceRoot":""}